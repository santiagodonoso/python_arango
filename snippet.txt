{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"test1": {
		"prefix": "route",
		"body": [
			"@get(\"/\")",
			"def _():",
			"\ttry:",
			"\t\tpass",
			"\texcept Exception as ex:",
			"\t\tif len(ex.args) >= 2: # own created exception",
			"\t\t\tresponse.status = ex.args[1]",
			"\t\t\treturn {\"error\":ex.args[0]}",
			"\t\telse: # python exception, not under our control",
			"\t\t\terror = \"System under maintenance. Please try again\"",
			"\t\t\tresponse.status = 500",
			"\t\t\treturn {\"error\":f\"{error}\"}",
			"\tfinally:",
			"\t\tpass"

		],
		"description": "create a route with a function"
	},
	
	
	"route": {
		"prefix": "routedb",
		"body": [
			"@get(\"/\")",
			"def _():",
			"\ttry:",
			"\t\t# TODO: Validate",
			"\t\tdb, cursor = x.db()",
			"\t\tcursor.execute(\"\",())",
			"\t\tif cursor.rowcount == 0:",
			"\t\t\traise Exception(\"User could not be deleted\", 404)",
			"\t\tdb.commit()",
			"\texcept Exception as ex:",
			"\t\tprint(\"#\"*1000)",
			"\t\tprint(ex)",
			"\t\ttry:",
			"\t\t\tif \"db\" in locals():db.rollback()",
			"\t\t\tif len(ex.args) >= 2: # own created exception",
			"\t\t\t\tresponse.status = ex.args[1]",
			"\t\t\t\treturn {\"error\":ex.args[0]}",
			"\t\t\telse: # python exception, not under our control",
			"\t\t\t\terror = \"System under maintenance. Please try again\"",
			"\t\t\t\tresponse.status = 500",
			"\t\t\t\treturn {\"error\":f\"{error}\"}",
			"\t\texcept Exception as e:",
			"\t\t\tprint(\"#\"*50)",
			"\t\t\tprint(e)",
			"\t\t\ttoast = template(\"__toast\", message=\"System crashed\")",
			"\t\t\treturn f\"<template mix-target='#toast' mix-bottom>{toast}</template>\"",
			"\tfinally:",
			"\t\tif \"cursor\" in locals(): cursor.close()",
			"\t\tif \"db\" in locals(): db.close()"
	
		],
		"description": "create a route with a function"
	}



}